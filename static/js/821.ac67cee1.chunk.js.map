{"version":3,"file":"static/js/821.ac67cee1.chunk.js","mappings":"mLAAaA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,2BACE,6BAAUA,KAGf,C,2GCJYC,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,MAEnB,OACE,6BACE,mBACEC,KAAK,SACLC,QAAS,wBAAMH,GAAmB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUM,aAAV,eAAiBC,OAAQ,cAA1C,EAFX,sBAQL,EChBYC,EAAgB,SAAC,GAEvB,IAAD,IADJC,UAAaC,EACT,EADSA,KAAMC,EACf,EADeA,OAAQC,EACvB,EADuBA,QAASR,EAChC,EADgCA,KAAMS,EACtC,EADsCA,OAAQC,EAC9C,EAD8CA,MAAOC,EACrD,EADqDA,OAEzD,OACE,iCACE,gBAAKC,IAAKF,EAAOG,IAAKP,KACtB,wBAAKA,KACL,yCAEA,2BACE,oCAEE,0BAAOG,QAET,oCAEE,0BAAOF,QAET,oCAEE,0BAAOC,QAET,oCAEE,0BAAOG,EAAOL,WAEhB,kCAEE,0BAAON,YAKhB,E,2BCOD,EAhCsB,WACpB,OAAkCc,EAAAA,EAAAA,UAAS,MAA3C,eAAOT,EAAP,KAAkBU,EAAlB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAgBC,EAAAA,EAAAA,MAAhBD,YAWR,OATAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,IAEbM,EAAAA,EAAAA,IAAiBH,GACdI,KAAKT,GACLU,MAAMN,GACNO,QAAQT,GAAa,GACzB,GAAE,CAACG,KAGF,gCACGJ,IAAa,SAACW,EAAA,EAAD,IACbtB,IACC,iCACE,SAACV,EAAD,KACA,SAACF,EAAA,EAAD,WACE,SAACW,EAAD,CAAeC,UAAWA,SAI/Ba,IAAS,0DAGf,C,+ICtCYU,EAAmB,SAAAC,GAAU,OACxCA,EACGC,KAAI,kBAAmC,CACtCC,GADG,EAAGA,GAENzB,KAFG,EAAOA,KAGVE,QAHG,EAAaA,QAIhBE,MAJG,EAAsBA,MAAtB,IAMJsB,MAAK,SAACC,EAAgBC,GAAjB,OACJD,EAAe3B,KAAK6B,cAAcD,EAAgB5B,KAD9C,IAGL8B,MAAM,EAAG,EAX4B,ECG1CC,EAAAA,EAAAA,SAAAA,QAAyB,kCAElB,IAAMC,EAAa,mCAAG,uGACJD,EAAAA,EAAAA,GAAM,cADF,uBACnBE,EADmB,EACnBA,KADmB,kBAGpBX,EAAiBW,EAAKC,UAHF,2CAAH,qDAMbjB,EAAgB,mCAAG,WAAMQ,GAAN,0FACPM,EAAAA,EAAAA,GAAM,cAAD,OAAeN,IADb,uBACtBQ,EADsB,EACtBA,KADsB,kBAGvBA,GAHuB,2CAAH,sDAMhBE,EAAgB,mCAAG,WAAMC,GAAN,0FACPL,EAAAA,EAAAA,GAAM,aAAc,CACzCM,OAAQ,CAAErC,KAAMoC,KAFY,uBACtBH,EADsB,EACtBA,KADsB,kBAKvBX,EAAiBW,EAAKC,UALC,2CAAH,qD","sources":["components/Main/Main.jsx","components/BackButton/BackButton.jsx","components/CharacterInfo/CharacterInfo.jsx","pages/CharacterPage/CharacterPage.jsx","utils/charactersMapper.js","toApi/getData.js"],"sourcesContent":["export const Main = ({ children }) => {\n  return (\n    <main>\n      <section>{children}</section>\n    </main>\n  );\n};\n","import { useLocation, useNavigate } from 'react-router-dom';\n\nexport const BackButton = () => {\n  const location = useLocation();\n  const navigation = useNavigate();\n\n  return (\n    <header>\n      <button\n        type=\"button\"\n        onClick={() => navigation(location?.state?.from || '/characters')}\n      >\n        GO BACK\n      </button>\n    </header>\n  );\n};\n","export const CharacterInfo = ({\n  character: { name, status, species, type, gender, image, origin },\n}) => {\n  return (\n    <>\n      <img src={image} alt={name} />\n      <h1>{name}</h1>\n      <p>Informations</p>\n\n      <ul>\n        <li>\n          Gender\n          <span>{gender}</span>\n        </li>\n        <li>\n          Status\n          <span>{status}</span>\n        </li>\n        <li>\n          Specie\n          <span>{species}</span>\n        </li>\n        <li>\n          Origin\n          <span>{origin.name}</span>\n        </li>\n        <li>\n          Type\n          <span>{type}</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BackButton } from 'components/BackButton/BackButton';\nimport { CharacterInfo } from 'components/CharacterInfo/CharacterInfo';\nimport { Main } from 'components/Main/Main';\nimport { Loader } from 'components/Loader/Loader';\nimport { getCharacterById } from 'toApi/getData';\n\nconst CharacterPage = () => {\n  const [character, setCharacter] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { characterId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getCharacterById(characterId)\n      .then(setCharacter)\n      .catch(setError)\n      .finally(setIsLoading(false));\n  }, [characterId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {character && (\n        <>\n          <BackButton />\n          <Main>\n            <CharacterInfo character={character} />\n          </Main>\n        </>\n      )}\n      {error && <p>Ooops! Something went wrong.</p>}\n    </>\n  );\n};\n\nexport default CharacterPage;\n","export const charactersMapper = characters =>\n  characters\n    .map(({ id, name, species, image }) => ({\n      id,\n      name,\n      species,\n      image,\n    }))\n    .sort((firstCharacter, secondCharacter) =>\n      firstCharacter.name.localeCompare(secondCharacter.name)\n    )\n    .slice(0, 8);\n","import axios from 'axios';\nimport { charactersMapper } from '../utils/charactersMapper';\n\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\nexport const getCharacters = async () => {\n  const { data } = await axios('/character');\n\n  return charactersMapper(data.results);\n};\n\nexport const getCharacterById = async id => {\n  const { data } = await axios(`/character/${id}`);\n\n  return data;\n};\n\nexport const searchCharacters = async query => {\n  const { data } = await axios('/character', {\n    params: { name: query },\n  });\n\n  return charactersMapper(data.results);\n};\n"],"names":["Main","children","BackButton","location","useLocation","navigation","useNavigate","type","onClick","state","from","CharacterInfo","character","name","status","species","gender","image","origin","src","alt","useState","setCharacter","isLoading","setIsLoading","error","setError","characterId","useParams","useEffect","getCharacterById","then","catch","finally","Loader","charactersMapper","characters","map","id","sort","firstCharacter","secondCharacter","localeCompare","slice","axios","getCharacters","data","results","searchCharacters","query","params"],"sourceRoot":""}